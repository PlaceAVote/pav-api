{
  "swagger": "2.0",
  "info": {
    "version": "0.0.0",
    "title": "PlaceAVote user api",
    "description": "PlaceAVote user api for registering and authenticating existing users"
  },
  "consumes": [
    "application/json",
    "multipart/form-data"
  ],
  "produces": [
    "application/json",
    "multipart/form-data"
  ],
  "parameters": {
    "NewUserIssueParam": {
      "name": "NewUserIssue",
      "in": "body",
      "required": true,
      "schema": {
        "type": "object",
        "properties": {
          "comment": {
            "type": "string",
            "format": "string"
          },
          "bill_id": {
            "type": "string",
            "format": "string"
          },
          "article_link": {
            "type": "string",
            "format": "string"
          }
        }
      }
    },
    "AccountSettingsUpdateParam": {
      "name": "AccountSettingsUpdate",
      "in": "body",
      "required": true,
      "schema": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "string"
          },
          "first_name": {
            "type": "string",
            "format": "string"
          },
          "last_name": {
            "type": "string",
            "format": "string"
          },
          "gender": {
            "type": "string",
            "format": "string"
          },
          "dob": {
            "type": "string",
            "format": "string"
          },
          "public": {
            "type": "boolean",
            "format": "boolean"
          },
          "city": {
            "type": "string",
            "format": "string"
          }
        }
      }
    },
    "ConfirmTokenParam": {
      "name": "confirm-token",
      "in": "path",
      "required": true,
      "type": "string",
      "format": "string"
    },
    "ProfileImageParam": {
      "name": "file",
      "description": "Profile image, size must be 50x50x of type .jpeg or png. Payload should be a Base64 Encoded Data URI.",
      "in": "body",
      "required": true,
      "schema": {
        "type": "object",
        "properties": {
          "file": {
            "type": "string",
            "format": "string"
          }
        }
      }
    },
    "TokenParam": {
      "name": "Authorization",
      "in": "header",
      "description": "token to be passed as a header",
      "required": true,
      "type": "string",
      "items": {
        "type": "string",
        "format": "PAV_AUTH_TOKEN token"
      }
    },
    "UserIDParam": {
      "name": "user_id",
      "in": "path",
      "required": true,
      "type": "string",
      "format": "string"
    },
    "PageParam": {
      "name": "page",
      "in": "query",
      "required": false,
      "type": "string",
      "format": "string"
    },
    "NotificationIDParam": {
      "name": "notification_id",
      "in": "path",
      "description": "Event ID associated with Notification",
      "required": true,
      "type": "string",
      "format": "string"
    },
    "LoginBodyParam": {
      "name": "Login",
      "in": "body",
      "required": true,
      "schema": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "string"
          },
          "password": {
            "type": "string"
          }
        }
      }
    },
    "FacebookLoginBodyParam": {
      "name": "Login",
      "in": "body",
      "required": true,
      "schema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "string"
          },
          "email": {
            "type": "string",
            "format": "string"
          },
          "token": {
            "type": "string",
            "format": "string"
          }
        }
      }
    },
    "ConfirmPasswordResetBodyParam": {
      "name": "Confirm New Password",
      "in": "body",
      "required": true,
      "schema": {
        "title": "ConfirmPassword",
        "type": "object",
        "properties": {
          "reset_token": {
            "type": "string",
            "format": "string"
          },
          "new_password": {
            "type": "string",
            "format": "string"
          }
        }
      }
    },
    "UserFollowBodyParam": {
      "name": "User to follow",
      "in": "body",
      "required": true,
      "schema": {
        "type": "object",
        "properties": {
          "user_id": {
            "type": "string",
            "format": "string"
          }
        }
      }
    },
    "TokenBodyParam": {
      "name": "token",
      "in": "query",
      "required": true,
      "type": "string",
      "format": "string"
    },
    "NewFacebookUserProfileBodyParam": {
      "name": "NewUser",
      "in": "body",
      "required": true,
      "schema": {
        "title": "NewUserProfile",
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "string"
          },
          "id": {
            "type": "string",
            "format": "string"
          },
          "token": {
            "type": "string",
            "format": "string"
          },
          "first_name": {
            "type": "string",
            "format": "string"
          },
          "last_name": {
            "type": "string",
            "format": "string"
          },
          "dob": {
            "type": "string",
            "format": "string"
          },
          "country_code": {
            "type": "string",
            "format": "USA"
          },
          "img_url": {
            "type": "string",
            "format": "string"
          },
          "topics": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "[Defence, Arts]"
            }
          },
          "gender": {
            "type": "string",
            "format": "string"
          }
        }
      }
    },
    "NewUserProfileBodyParam": {
      "name": "NewUser",
      "in": "body",
      "required": true,
      "schema": {
        "title": "NewUserProfile",
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "test@place.com"
          },
          "password": {
            "type": "string"
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "dob": {
            "type": "string",
            "format": "01/10/1999"
          },
          "country_code": {
            "type": "string",
            "format": "USA"
          },
          "topics": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "[Defence, Arts]"
            }
          },
          "gender": {
            "type": "string",
            "format": "string"
          }
        }
      }
    }
  },
  "definitions": {
    "NewProfileImageResponse": {
      "title": "UserProfileImage",
      "type": "object",
      "properties": {
        "img_url": {
          "type": "string",
          "format": "string"
        }
      }
    },
    "UserProfileResponse": {
      "title": "UserProfile",
      "type": "object",
      "properties": {
        "user_id": {
          "type": "string",
          "format": "string"
        },
        "first_name": {
          "type": "string"
        },
        "last_name": {
          "type": "string"
        },
        "country_code": {
          "type": "string",
          "format": "USA"
        },
        "city": {
          "type": "string",
          "format": "string"
        },
        "following": {
          "type": "boolean",
          "format": "boolean"
        },
        "total_followers": {
          "type": "number",
          "format": "number"
        },
        "total_following": {
          "type": "number",
          "format": "number"
        }
      }
    },
    "NewUserProfileResponse": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "string",
          "format": "string"
        },
        "token": {
          "type": "string"
        }
      }
    },
    "UserFollowingRecords": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/UserFollowingRecord"
      }
    },
    "UserFollowingRecord": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "string",
          "format": "string"
        },
        "first_name": {
          "type": "string"
        },
        "last_name": {
          "type": "string"
        },
        "img_url": {
          "type": "string"
        },
        "follower_count": {
          "type": "number",
          "format": "number"
        }
      }
    },
    "NewTokenResponse": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        }
      }
    },
    "AccountSettingsResponse": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "string",
          "format": "string"
        },
        "dob": {
          "type": "string",
          "format": "string"
        },
        "first_name": {
          "type": "string",
          "format": "string"
        },
        "last_name": {
          "type": "string",
          "format": "string"
        },
        "gender": {
          "type": "string",
          "format": "string"
        },
        "email": {
          "type": "string",
          "format": "string"
        },
        "public": {
          "type": "boolean",
          "format": "boolean"
        },
        "social_login": {
          "type": "boolean",
          "format": "boolean"
        },
        "img_url": {
          "type": "string",
          "format": "string"
        },
        "city": {
          "type": "string",
          "format": "string"
        }
      }
    },
    "FeedEventRecords": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/FeedEventRecord"
      }
    },
    "FeedEventRecord": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "string",
          "format": "string"
        },
        "type": {
          "type": "string",
          "format": "string"
        },
        "timestamp": {
          "type": "number",
          "format": "number"
        }
      }
    },
    "TimelineEventRecords": {
      "type": "object",
      "properties": {
        "next-page": {
          "type": "number",
          "format": "If equal to zero then there are no more results"
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TimelineEventRecord"
          }
        }
      }
    },
    "TimelineEventRecord": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "string",
          "format": "string"
        },
        "type": {
          "type": "string",
          "format": "string"
        },
        "timestamp": {
          "type": "number",
          "format": "number"
        }
      }
    },
    "NotificationRecords": {
      "type": "object",
      "properties": {
        "next-page": {
          "type": "number",
          "format": "If equal to zero then there are no more results"
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NotificationRecord"
          }
        }
      }
    },
    "NotificationRecord": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "format": "reply"
        },
        "user_id": {
          "type": "string",
          "format": "string"
        },
        "timestamp": {
          "type": "number",
          "format": "number"
        },
        "read": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    }
  },
  "paths": {
    "/user/feed": {
      "get": {
        "description": "Get the current users feed",
        "parameters": [
          {
            "$ref": "#/parameters/TokenParam"
          }
        ],
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/FeedEventRecords"
            }
          },
          "401": {
            "description": "Not Authorized (Check Authentication Token)"
          }
        }
      }
    },
    "/user/{user_id}/timeline": {
      "get": {
        "description": "Given a user ID then retrieve that users personal timeline",
        "parameters": [
          {
            "$ref": "#/parameters/UserIDParam"
          },
          {
            "$ref": "#/parameters/PageParam"
          },
          {
            "$ref": "#/parameters/TokenParam"
          }
        ],
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/TimelineEventRecords"
            }
          },
          "401": {
            "description": "Not Authorized (Check Authentication Token)"
          }
        }
      }
    },
    "/user/me/settings": {
      "get": {
        "description": "Given a users token.  Retrieve there account settings",
        "parameters": [
          {
            "$ref": "#/parameters/TokenParam"
          }
        ],
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/AccountSettingsResponse"
            }
          },
          "401": {
            "description": "Not Authorized (Check Authentication Token)"
          }
        }
      },
      "post": {
        "description": "Update users account settings",
        "parameters": [
          {
            "$ref": "#/parameters/TokenParam"
          },
          {
            "$ref": "#/parameters/AccountSettingsUpdateParam"
          }
        ],
        "tags": [
          "Users"
        ],
        "responses": {
          "201": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/AccountSettingsResponse"
            }
          },
          "401": {
            "description": "Not Authorized (Check Authentication Token)"
          }
        }
      }
    },
    "/user/me/timeline": {
      "get": {
        "description": "Given a user ID then retrieve that users personal timeline",
        "parameters": [
          {
            "$ref": "#/parameters/PageParam"
          },
          {
            "$ref": "#/parameters/TokenParam"
          }
        ],
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/TimelineEventRecords"
            }
          },
          "401": {
            "description": "Not Authorized (Check Authentication Token)"
          }
        }
      }
    },
    "/user/notification/{notification_id}/mark": {
      "post": {
        "description": "Mark notification if user has read it",
        "parameters": [
          {
            "$ref": "#/parameters/NotificationIDParam"
          },
          {
            "$ref": "#/parameters/TokenParam"
          }
        ],
        "tags": [
          "Users"
        ],
        "responses": {
          "201": {
            "description": "Successful response"
          },
          "401": {
            "description": "Not Authorized (Check Authentication Token)"
          }
        }
      }
    },
    "/user/notifications": {
      "get": {
        "description": "Get the current users notifications",
        "parameters": [
          {
            "$ref": "#/parameters/TokenParam"
          }
        ],
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/NotificationRecords"
            }
          },
          "401": {
            "description": "Not Authorized (Check Authentication Token)"
          }
        }
      }
    },
    "/user/facebook": {
      "put": {
        "description": "Register new user",
        "parameters": [
          {
            "$ref": "#/parameters/NewFacebookUserProfileBodyParam"
          }
        ],
        "tags": [
          "Users"
        ],
        "responses": {
          "201": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/NewUserProfileResponse"
            }
          },
          "400": {
            "description": "Bad Request (Check body of request)"
          }
        }
      }
    },
    "/user/me/profile/image": {
      "post": {
        "description": "Upload Profile image to user profile",
        "parameters": [
          {
            "$ref": "#/parameters/TokenParam"
          },
          {
            "$ref": "#/parameters/ProfileImageParam"
          }
        ],
        "tags": [
          "Users"
        ],
        "responses": {
          "201": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/NewProfileImageResponse"
            }
          },
          "401": {
            "description": "Not Authorized (Check Authentication Token)"
          }
        }
      }
    },
    "/user/me/profile": {
      "get": {
        "description": "Given a user_id retrieve user profile in relation to current user.",
        "parameters": [
          {
            "$ref": "#/parameters/TokenParam"
          }
        ],
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/UserProfileResponse"
            }
          },
          "401": {
            "description": "Not Authorized (Check Authentication Token)"
          }
        }
      }
    },
    "/user/{user_id}/profile": {
      "get": {
        "description": "Given a user_id retrieve user profile in relation to current user.",
        "parameters": [
          {
            "$ref": "#/parameters/TokenParam"
          },
          {
            "$ref": "#/parameters/UserIDParam"
          }
        ],
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/UserProfileResponse"
            }
          },
          "401": {
            "description": "Not Authorized (Check Authentication Token)"
          }
        }
      }
    },
    "/user": {
      "put": {
        "description": "Register new user",
        "parameters": [
          {
            "$ref": "#/parameters/NewUserProfileBodyParam"
          }
        ],
        "tags": [
          "Users"
        ],
        "responses": {
          "201": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/NewUserProfileResponse"
            }
          },
          "400": {
            "description": "Bad Request (Check body of request)"
          }
        }
      }
    },
    "/user/authenticate": {
      "post": {
        "description": "Authenticate existing user",
        "parameters": [
          {
            "$ref": "#/parameters/LoginBodyParam"
          }
        ],
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/NewTokenResponse"
            }
          },
          "401": {
            "description": "Not Authorized"
          }
        }
      }
    },
    "/user/facebook/authenticate": {
      "post": {
        "description": "Authenticate existing user",
        "parameters": [
          {
            "$ref": "#/parameters/FacebookLoginBodyParam"
          }
        ],
        "tags": [
          "Users"
        ],
        "responses": {
          "201": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/NewTokenResponse"
            }
          },
          "401": {
            "description": "Not Authorized"
          }
        }
      }
    },
    "/password/reset": {
      "post": {
        "description": "Reset User Password",
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "string"
          }
        ],
        "tags": [
          "Users"
        ],
        "responses": {
          "201": {
            "description": "Successful response"
          },
          "401": {
            "description": "Not Authorized"
          }
        }
      }
    },
    "/password/change": {
      "post": {
        "description": "Change Users Password",
        "parameters": [
          {
            "$ref": "#/parameters/TokenParam"
          },
          {
            "name": "PasswordChangeRequest",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "current_password": {
                  "type": "string",
                  "format": "string"
                },
                "new_password": {
                  "type": "string",
                  "format": "string"
                }
              }
            }
          }
        ],
        "tags": [
          "Users"
        ],
        "responses": {
          "201": {
            "description": "Successful response"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Check token and current password is correct"
          }
        }
      }
    },
    "/password/reset/confirm": {
      "post": {
        "description": "Confirm password reset",
        "parameters": [
          {
            "$ref": "#/parameters/ConfirmPasswordResetBodyParam"
          }
        ],
        "tags": [
          "Users"
        ],
        "responses": {
          "201": {
            "description": "Successful response"
          },
          "401": {
            "description": "Not Authorized"
          }
        }
      }
    },
    "/user/confirm/{confirm-token}": {
      "post": {
        "description": "Confirm token sent in users email",
        "parameters": [
          {
            "$ref": "#/parameters/ConfirmTokenParam"
          }
        ],
        "tags": [
          "Users"
        ],
        "responses": {
          "201": {
            "description": "Successful response"
          },
          "401": {
            "description": "Confirmation token is invalid"
          }
        }
      }
    },
    "/user/me/following": {
      "get": {
        "description": "Get users the current logged in user is following",
        "parameters": [
          {
            "$ref": "#/parameters/TokenParam"
          }
        ],
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/UserFollowingRecords"
            }
          },
          "401": {
            "description": "Not Authorized"
          }
        }
      }
    },
    "/user/{user_id}/following": {
      "get": {
        "description": "Given a user id, retrieve users they are following",
        "parameters": [
          {
            "$ref": "#/parameters/UserIDParam"
          },
          {
            "$ref": "#/parameters/TokenParam"
          }
        ],
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/UserFollowingRecords"
            }
          },
          "401": {
            "description": "Not Authorized"
          }
        }
      }
    },
    "/user/me/followers": {
      "get": {
        "description": "Get users the current logged in user is followed by",
        "parameters": [
          {
            "$ref": "#/parameters/TokenParam"
          }
        ],
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/UserFollowingRecords"
            }
          },
          "401": {
            "description": "Not Authorized"
          }
        }
      }
    },
    "/user/{user_id}/followers": {
      "get": {
        "description": "Given a user id, retrieve users they are being followed by",
        "parameters": [
          {
            "$ref": "#/parameters/UserIDParam"
          },
          {
            "$ref": "#/parameters/TokenParam"
          }
        ],
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/UserFollowingRecords"
            }
          },
          "401": {
            "description": "Not Authorized"
          }
        }
      }
    },
    "/user/follow": {
      "put": {
        "description": "Follow a user",
        "parameters": [
          {
            "$ref": "#/parameters/UserFollowBodyParam"
          },
          {
            "$ref": "#/parameters/TokenParam"
          }
        ],
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "Successful response"
          },
          "401": {
            "description": "Not Authorized"
          }
        }
      }
    },
    "/user/unfollow": {
      "delete": {
        "description": "Unfollow a user",
        "parameters": [
          {
            "$ref": "#/parameters/UserFollowBodyParam"
          },
          {
            "$ref": "#/parameters/TokenParam"
          }
        ],
        "tags": [
          "Users"
        ],
        "responses": {
          "204": {
            "description": "Successful response"
          },
          "401": {
            "description": "Not Authorized"
          }
        }
      }
    },
    "/user/token/validate": {
      "get": {
        "description": "Validate Authentication Token",
        "parameters": [
          {
            "$ref": "#/parameters/TokenBodyParam"
          }
        ],
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "Successful response"
          },
          "401": {
            "description": "Token invalid"
          }
        }
      }
    },
    "/user/issue": {
      "put": {
        "description": "Create new user issue",
        "parameters": [
          {
            "$ref": "#/parameters/TokenParam"
          },
          {
            "$ref": "#/parameters/NewUserIssueParam"
          }
        ],
        "tags": [
          "Users"
        ],
        "responses": {
          "201": {
            "description": "Successful response"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Token invalid"
          }
        }
      }
    }
  }
}
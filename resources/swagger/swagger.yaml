swagger: '2.0'
info:
  version: 0.0.0
  title: PlaceAVote API
  description: PlaceAVote API
consumes:
  - application/json
  - multipart/form-data
produces:
  - application/json
  - multipart/form-data
parameters:
  BillIDParam:
    name: bill_id
    in: path
    description: Bill ID
    required: true
    type: string
    format: hr2-114
  CommentIDParam:
    name: comment_id
    in: path
    description: Comment ID
    required: true
    type: string
    format: string
  ScoreBodyParam:
    name: Likebody
    in: body
    description: Like Body
    required: true
    schema:
      $ref: '#/definitions/NewScoreRecord'
  NewCommentParam:
    name: Comment
    in: body
    description: New Comment
    required: true
    schema:
      $ref: '#/definitions/NewCommentRecord'
  UpdateCommentParam:
    name: Update Comment Body
    in: body
    description: Update Comment Body
    required: true
    schema:
      $ref: '#/definitions/UpdateCommentRecord'
  LegislatorIDParam:
    name: id
    in: path
    description: Legislator ID
    required: true
    type: string
    format: string
  VoteRecordParam:
    name: vote record
    in: body
    description: Vote Record
    required: true
    schema:
      $ref: '#/definitions/NewVoteRecord'
  BillIDQueryParam:
    name: bill-id
    in: query
    description: Bill ID
    required: true
    type: string
    format: hr2-114
  BillIDPathParam:
    name: bill_id
    in: path
    description: Bill ID
    required: true
    type: string
    format: hr2-114
  UserValidationBodyParam:
    name: UserValidationRequest
    in: body
    required: true
    schema:
      type: object
      properties:
        email:
          type: string
          format: string
  ContactFormParam:
    name: ContactFormRequest
    in: body
    required: true
    schema:
      type: object
      properties:
        name:
          type: string
          format: string
        email:
          type: string
          format: string
        body:
          type: string
          format: string
  NewUserIssueParam:
    name: NewUserIssue
    in: body
    required: true
    schema:
      type: object
      properties:
        comment:
          type: string
          format: string
        bill_id:
          type: string
          format: string
        article_link:
          type: string
          format: string
  AccountSettingsUpdateParam:
    name: AccountSettingsUpdate
    in: body
    required: true
    schema:
      type: object
      properties:
        email:
          type: string
          format: string
        first_name:
          type: string
          format: string
        last_name:
          type: string
          format: string
        gender:
          type: string
          format: string
        dob:
          type: string
          format: string
        public:
          type: boolean
          format: boolean
        city:
          type: string
          format: string
  ConfirmTokenParam:
    name: confirm-token
    in: path
    required: true
    type: string
    format: string
  ProfileImageParam:
    name: file
    description: 'Profile image, size must be 50x50x of type .jpeg or png. Payload should be a Base64 Encoded Data URI.'
    in: body
    required: true
    schema:
      type: object
      properties:
        file:
          type: string
          format: string
  TokenParam:
    name: Authorization
    in: header
    description: token to be passed as a header
    required: true
    type: string
    items:
      type: string
      format: PAV_AUTH_TOKEN token
  OptionalTokenParam:
    name: Authorization
    in: header
    description: token to be passed as a header
    required: false
    type: string
    items:
      type: string
      format: PAV_AUTH_TOKEN token
  IssueIDParam:
    name: issue_id
    in: path
    description: Issue ID
    required: true
    type: string
  IssueResponseBodyParam:
    name: IssueResponse
    in: body
    required: true
    schema:
      type: object
      properties:
        emotional_response:
          type: number
          format: '1, 0, -1'
  UserIDParam:
    name: user_id
    in: path
    required: true
    type: string
    format: string
  NotificationIDParam:
    name: notification_id
    in: path
    description: Event ID associated with Notification
    required: true
    type: string
    format: string
  LoginBodyParam:
    name: Login
    in: body
    required: true
    schema:
      type: object
      properties:
        email:
          type: string
          format: string
        password:
          type: string
  FacebookLoginBodyParam:
    name: Login
    in: body
    required: true
    schema:
      type: object
      properties:
        id:
          type: string
          format: string
        email:
          type: string
          format: string
        token:
          type: string
          format: string
  ConfirmPasswordResetBodyParam:
    name: Confirm New Password
    in: body
    required: true
    schema:
      title: ConfirmPassword
      type: object
      properties:
        reset_token:
          type: string
          format: string
        new_password:
          type: string
          format: string
  UserFollowBodyParam:
    name: User to follow
    in: body
    required: true
    schema:
      type: object
      properties:
        user_id:
          type: string
          format: string
  TokenBodyParam:
    name: token
    in: query
    required: true
    type: string
    format: string
  FromParam:
    name: from
    description: Last Known Timestamp
    in: query
    required: false
    type: number
    format: number
  TermParam:
    name: term
    description: Search Term
    in: query
    required: true
    type: string
    format: string
  TagParam:
    name: tag
    description: Search tag, specify comma seperated list e.g. Education,Drugs
    in: query
    required: true
    type: string
    format: string
  NewFacebookUserProfileBodyParam:
    name: NewUser
    in: body
    required: true
    schema:
      title: NewUserProfile
      type: object
      properties:
        email:
          type: string
          format: string
        id:
          type: string
          format: string
        token:
          type: string
          format: string
        first_name:
          type: string
          format: string
        last_name:
          type: string
          format: string
        dob:
          type: string
          format: string
        zipcode:
          type: string
          format: '90210'
        img_url:
          type: string
          format: string
        topics:
          type: array
          items:
            type: string
            format: '[Defence, Arts]'
        gender:
          type: string
          format: string
  NewUserProfileBodyParam:
    name: NewUser
    in: body
    required: true
    schema:
      title: NewUserProfile
      type: object
      properties:
        email:
          type: string
          format: test@place.com
        password:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        dob:
          type: string
          format: 01/10/1999
        zipcode:
          type: string
          format: '90210'
        topics:
          type: array
          items:
            type: string
            format: '[Defence, Arts]'
        gender:
          type: string
          format: string
definitions:
  NewProfileImageResponse:
    title: UserProfileImage
    type: object
    properties:
      img_url:
        type: string
        format: string
  UserProfileResponse:
    title: UserProfile
    type: object
    properties:
      user_id:
        type: string
        format: string
      first_name:
        type: string
      last_name:
        type: string
      country_code:
        type: string
        format: USA
      state:
        type: string
        format: string
      city:
        type: string
        format: string
      following:
        type: boolean
        format: boolean
      total_followers:
        type: number
        format: number
      total_following:
        type: number
        format: number
  NewUserProfileResponse:
    type: object
    properties:
      user_id:
        type: string
        format: string
      token:
        type: string
  UserFollowingRecords:
    type: array
    items:
      $ref: '#/definitions/UserFollowingRecord'
  UserFollowingRecord:
    type: object
    properties:
      user_id:
        type: string
        format: string
      first_name:
        type: string
      last_name:
        type: string
      img_url:
        type: string
      follower_count:
        type: number
        format: number
  NewTokenResponse:
    type: object
    properties:
      token:
        type: string
  AccountSettingsResponse:
    type: object
    properties:
      user_id:
        type: string
        format: string
      dob:
        type: string
        format: string
      first_name:
        type: string
        format: string
      last_name:
        type: string
        format: string
      gender:
        type: string
        format: string
      email:
        type: string
        format: string
      public:
        type: boolean
        format: boolean
      social_login:
        type: boolean
        format: boolean
      img_url:
        type: string
        format: string
      city:
        type: string
        format: string
  FeedEventRecords:
    type: object
    properties:
      last_timestamp:
        type: number
        format: number
      results:
        type: array
        items:
          $ref: '#/definitions/FeedEventRecord'
  FeedEventRecord:
    type: object
    properties:
      user_id:
        type: string
        format: string
      type:
        type: string
        format: string
      timestamp:
        type: number
        format: number
  TimelineEventRecords:
    type: object
    properties:
      last_timestamp:
        type: number
        format: number
      results:
        type: array
        items:
          $ref: '#/definitions/TimelineEventRecord'
  TimelineEventRecord:
    type: object
    properties:
      user_id:
        type: string
        format: string
      type:
        type: string
        format: string
      timestamp:
        type: number
        format: number
  NotificationRecords:
    type: object
    properties:
      last_timestamp:
        type: number
        format: number
      results:
        type: array
        items:
          $ref: '#/definitions/NotificationRecord'
  NotificationRecord:
    type: object
    properties:
      type:
        type: string
        format: reply
      user_id:
        type: string
        format: string
      timestamp:
        type: number
        format: number
      read:
        type: boolean
        format: boolean
  VoteRecord:
    type: object
    properties:
      bill_id:
        type: string
        format: hr2-114
      vote:
        type: boolean
        format: boolean
      timestamp:
        type: string
        format: string
  VoteRecords:
    type: array
    items:
      $ref: '#/definitions/VoteRecord'
  VoteCount:
    type: object
    properties:
      bill_id:
        type: string
      yes-count:
        type: number
      no-count:
        type: number
  NewVoteRecord:
    type: object
    properties:
      bill_id:
        type: string
        format: fr2-114
      vote:
        type: boolean
        format: boolean
  LegislatorRecord:
    type: object
    properties:
      thomas:
        title: thomas
        type: string
        format: string
      first_name:
        title: first_name
        type: string
        format: string
      last_name:
        title: last_name
        type: string
        format: string
      birthday:
        title: birthday
        type: string
        format: string
      govtrack:
        title: govtrack
        type: string
        format: string
      bioguide:
        title: bioguide
        type: string
        format: string
      gender:
        title: gender
        type: string
        format: string
      social:
        title: social
        type: object
        properties:
          twitter:
            type: string
            format: string
          facebook:
            type: string
            format: string
          youtube:
            type: string
            format: string
          facebook_id:
            type: string
            format: string
          youtube_id:
            type: string
            format: string
      current_term:
        title: current_term
        type: object
        properties:
          party:
            type: string
            format: string
          address:
            type: string
            format: string
          fax:
            type: string
            format: string
          phone:
            type: string
            format: string
          start:
            type: string
            format: string
          end:
            type: string
            format: string
          type:
            type: string
            format: string
          state:
            type: string
            format: string
          office:
            type: string
            format: string
          rss_url:
            type: string
            format: string
          url:
            type: string
            format: string
          district:
            type: number
            format: number
          contact_form:
            type: string
            format: string
      img_urls:
        type: object
        properties:
          200px:
            type: string
            format: string
          100px:
            type: string
            format: string
          50px:
            type: string
            format: string
  TrendingBillRecord:
    type: object
    properties:
      bill_id:
        title: bill_id
        type: string
        format: string
      official_title:
        title: official_title
        type: string
        format: string
      short_title:
        title: short_title
        type: string
        format: string
      popular_title:
        title: popular_title
        type: string
        format: string
      summary:
        title: summary
        type: string
        format: string
      comment_count:
        title: comment_count
        type: number
        format: number
      yes_count:
        title: yes_count
        type: number
        format: number
      no_count:
        title: no_count
        type: number
        format: number
  TrendingBillRecords:
    type: array
    items:
      $ref: '#/definitions/TrendingBillRecord'
  BillCommentRecords:
    type: object
    properties:
      last_comment_id:
        type: string
        format: string
      total:
        type: number
        format: number
      comments:
        type: array
        items:
          $ref: '#/definitions/BillCommentRecord'
  BillCommentRecord:
    type: object
    properties:
      comment_id:
        title: comment_id
        type: string
        format: string
      author:
        title: author
        type: string
        format: string
      author_first_name:
        title: authors first name
        type: string
        format: string
      author_last_name:
        title: authors last name
        type: string
        format: string
      author_img_url:
        title: author_img_url
        type: string
        format: string
      body:
        title: body
        type: string
        format: string
      score:
        title: score
        type: number
        format: number
      timestamp:
        title: timestamp
        type: number
        format: number
      parent_id:
        title: parent_id
        type: string
        format: string
      has_children:
        title: has_children
        type: boolean
        format: boolean
      liked:
        title: User Liked Comment?
        type: boolean
        format: boolean
      disliked:
        title: User Disliked Comment?
        type: boolean
        format: boolean
  NewCommentRecord:
    type: object
    properties:
      bill_id:
        title: bill_id
        type: string
        format: string
      body:
        title: body
        type: string
        format: string
  UpdateCommentRecord:
    type: object
    properties:
      body:
        title: body
        type: string
        format: string
  NewScoreRecord:
    type: object
    properties:
      bill_id:
        title: bill_id
        type: string
        format: string
paths:
  /user/feed:
    get:
      description: Get the current users feed
      parameters:
        - $ref: '#/parameters/TokenParam'
        - $ref: '#/parameters/FromParam'
      tags:
        - Users
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/FeedEventRecords'
        '401':
          description: Not Authorized (Check Authentication Token)
  '/user/{user_id}/timeline':
    get:
      description: Given a user ID then retrieve that users personal timeline
      parameters:
        - $ref: '#/parameters/UserIDParam'
        - $ref: '#/parameters/FromParam'
        - $ref: '#/parameters/TokenParam'
      tags:
        - Users
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/TimelineEventRecords'
        '401':
          description: Not Authorized (Check Authentication Token)
  /user/me/settings:
    get:
      description: Given a users token.  Retrieve there account settings
      parameters:
        - $ref: '#/parameters/TokenParam'
      tags:
        - Users
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/AccountSettingsResponse'
        '401':
          description: Not Authorized (Check Authentication Token)
    post:
      description: Update users account settings
      parameters:
        - $ref: '#/parameters/TokenParam'
        - $ref: '#/parameters/AccountSettingsUpdateParam'
      tags:
        - Users
      responses:
        '201':
          description: Successful response
          schema:
            $ref: '#/definitions/AccountSettingsResponse'
        '401':
          description: Not Authorized (Check Authentication Token)
  /user/me/timeline:
    get:
      description: Given a user ID then retrieve that users personal timeline
      parameters:
        - $ref: '#/parameters/FromParam'
        - $ref: '#/parameters/TokenParam'
      tags:
        - Users
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/TimelineEventRecords'
        '401':
          description: Not Authorized (Check Authentication Token)
  '/user/notification/{notification_id}/mark':
    post:
      description: Mark notification if user has read it
      parameters:
        - $ref: '#/parameters/NotificationIDParam'
        - $ref: '#/parameters/TokenParam'
      tags:
        - Users
      responses:
        '201':
          description: Successful response
        '401':
          description: Not Authorized (Check Authentication Token)
  /user/notifications:
    get:
      description: Get the current users notifications
      parameters:
        - $ref: '#/parameters/TokenParam'
        - $ref: '#/parameters/FromParam'
      tags:
        - Users
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/NotificationRecords'
        '401':
          description: Not Authorized (Check Authentication Token)
  /user/facebook:
    put:
      description: Register new user
      parameters:
        - $ref: '#/parameters/NewFacebookUserProfileBodyParam'
      tags:
        - Users
      responses:
        '201':
          description: Successful response
          schema:
            $ref: '#/definitions/NewUserProfileResponse'
        '400':
          description: Bad Request (Check body of request)
  /user/me/profile/image:
    post:
      description: Upload Profile image to user profile
      parameters:
        - $ref: '#/parameters/TokenParam'
        - $ref: '#/parameters/ProfileImageParam'
      tags:
        - Users
      responses:
        '201':
          description: Successful response
          schema:
            $ref: '#/definitions/NewProfileImageResponse'
        '401':
          description: Not Authorized (Check Authentication Token)
  /user/me/profile:
    get:
      description: Given a user_id retrieve user profile in relation to current user.
      parameters:
        - $ref: '#/parameters/TokenParam'
      tags:
        - Users
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/UserProfileResponse'
        '401':
          description: Not Authorized (Check Authentication Token)
  '/user/{user_id}/profile':
    get:
      description: Given a user_id retrieve user profile in relation to current user.
      parameters:
        - $ref: '#/parameters/OptionalTokenParam'
        - $ref: '#/parameters/UserIDParam'
      tags:
        - Users
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/UserProfileResponse'
        '401':
          description: Not Authorized (Check Authentication Token)
  /user/validate:
    post:
      description: Validate User Properties provided during onboarding
      parameters:
        - $ref: '#/parameters/UserValidationBodyParam'
      tags:
        - Users
      responses:
        '201':
          description: Successful response
        '400':
          description: Bad Request (Check body of request)
  /user:
    put:
      description: Register new user
      parameters:
        - $ref: '#/parameters/NewUserProfileBodyParam'
      tags:
        - Users
      responses:
        '201':
          description: Successful response
          schema:
            $ref: '#/definitions/NewUserProfileResponse'
        '400':
          description: Bad Request (Check body of request)
  /user/authenticate:
    post:
      description: Authenticate existing user
      parameters:
        - $ref: '#/parameters/LoginBodyParam'
      tags:
        - Users
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/NewTokenResponse'
        '401':
          description: Not Authorized
  /user/facebook/authenticate:
    post:
      description: Authenticate existing user
      parameters:
        - $ref: '#/parameters/FacebookLoginBodyParam'
      tags:
        - Users
      responses:
        '201':
          description: Successful response
          schema:
            $ref: '#/definitions/NewTokenResponse'
        '401':
          description: Not Authorized
  /password/reset:
    post:
      description: Reset User Password
      parameters:
        - name: email
          in: query
          required: true
          type: string
          format: string
      tags:
        - Users
      responses:
        '201':
          description: Successful response
        '401':
          description: Not Authorized
  /password/change:
    post:
      description: Change Users Password
      parameters:
        - $ref: '#/parameters/TokenParam'
        - name: PasswordChangeRequest
          in: body
          required: true
          schema:
            type: object
            properties:
              current_password:
                type: string
                format: string
              new_password:
                type: string
                format: string
      tags:
        - Users
      responses:
        '201':
          description: Successful response
        '400':
          description: Bad Request
        '401':
          description: Check token and current password is correct
  /password/reset/confirm:
    post:
      description: Confirm password reset
      parameters:
        - $ref: '#/parameters/ConfirmPasswordResetBodyParam'
      tags:
        - Users
      responses:
        '201':
          description: Successful response
        '401':
          description: Not Authorized
  '/user/confirm/{confirm-token}':
    post:
      description: Confirm token sent in users email
      parameters:
        - $ref: '#/parameters/ConfirmTokenParam'
      tags:
        - Users
      responses:
        '201':
          description: Successful response
        '401':
          description: Confirmation token is invalid
  /user/me/following:
    get:
      description: Get users the current logged in user is following
      parameters:
        - $ref: '#/parameters/TokenParam'
      tags:
        - Users
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/UserFollowingRecords'
        '401':
          description: Not Authorized
  '/user/{user_id}/following':
    get:
      description: 'Given a user id, retrieve users they are following'
      parameters:
        - $ref: '#/parameters/UserIDParam'
        - $ref: '#/parameters/TokenParam'
      tags:
        - Users
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/UserFollowingRecords'
        '401':
          description: Not Authorized
  /user/me/followers:
    get:
      description: Get users the current logged in user is followed by
      parameters:
        - $ref: '#/parameters/TokenParam'
      tags:
        - Users
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/UserFollowingRecords'
        '401':
          description: Not Authorized
  '/user/{user_id}/followers':
    get:
      description: 'Given a user id, retrieve users they are being followed by'
      parameters:
        - $ref: '#/parameters/UserIDParam'
        - $ref: '#/parameters/TokenParam'
      tags:
        - Users
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/UserFollowingRecords'
        '401':
          description: Not Authorized
  /user/follow:
    put:
      description: Follow a user
      parameters:
        - $ref: '#/parameters/UserFollowBodyParam'
        - $ref: '#/parameters/TokenParam'
      tags:
        - Users
      responses:
        '200':
          description: Successful response
        '401':
          description: Not Authorized
  /user/unfollow:
    delete:
      description: Unfollow a user
      parameters:
        - $ref: '#/parameters/UserFollowBodyParam'
        - $ref: '#/parameters/TokenParam'
      tags:
        - Users
      responses:
        '204':
          description: Successful response
        '401':
          description: Not Authorized
  /user/token/validate:
    get:
      description: Validate Authentication Token
      parameters:
        - $ref: '#/parameters/TokenBodyParam'
      tags:
        - Users
      responses:
        '200':
          description: Successful response
        '401':
          description: Token invalid
  '/user/issue/{issue_id}/response':
    get:
      description: Get users response to issue
      parameters:
        - $ref: '#/parameters/TokenParam'
        - $ref: '#/parameters/IssueIDParam'
      tags:
        - Users
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              emotional_response:
                type: string
                format: 'positive, neutral, negative, none'
        '400':
          description: Bad Request
        '401':
          description: Token invalid
    post:
      description: Create a user response to issue
      parameters:
        - $ref: '#/parameters/TokenParam'
        - $ref: '#/parameters/IssueIDParam'
        - $ref: '#/parameters/IssueResponseBodyParam'
      tags:
        - Users
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              emotional_response:
                type: string
                format: 'positive, neutral, negative, none'
        '400':
          description: Bad Request
        '401':
          description: Token invalid
    delete:
      description: Delete users response to issue
      parameters:
        - $ref: '#/parameters/TokenParam'
        - $ref: '#/parameters/IssueIDParam'
      tags:
        - Users
      responses:
        '204':
          description: Successful response
          schema:
            type: object
            properties:
              emotional_response:
                type: string
                format: 'positive, neutral, negative, none'
        '400':
          description: Bad Request
        '401':
          description: Token invalid
  /user/issue:
    put:
      description: Create new user issue
      parameters:
        - $ref: '#/parameters/TokenParam'
        - $ref: '#/parameters/NewUserIssueParam'
      tags:
        - Users
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              issue_id:
                type: string
                format: string
              short_issue_id:
                type: string
                format: string
              bill_id:
                type: string
                format: string
              bill_title:
                type: string
                format: string
              comment:
                type: string
                format: string
              user_id:
                type: string
                format: string
              first_name:
                type: string
                format: string
              last_name:
                type: string
                format: string
              img_url:
                type: string
                format: string
              article_link:
                type: string
                format: string
              article_img:
                type: string
                format: string
              article_title:
                type: string
                format: string
              emotional_response:
                type: string
                format: 'positive, neutral, negative, none'
              positive_responses:
                type: number
                format: number
              neutral_responses:
                type: number
                format: number
              negative_responses:
                type: number
                format: number
        '400':
          description: Bad Request
        '401':
          description: Token invalid
  '/user/issue/{issue_id}':
    get:
      description: Get user issue
      parameters:
        - $ref: '#/parameters/OptionalTokenParam'
        - $ref: '#/parameters/IssueIDParam'
      tags:
        - Users
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              issue_id:
                type: string
                format: string
              short_issue_id:
                type: string
                format: string
              bill_id:
                type: string
                format: string
              bill_title:
                type: string
                format: string
              comment:
                type: string
                format: string
              user_id:
                type: string
                format: string
              first_name:
                type: string
                format: string
              last_name:
                type: string
                format: string
              img_url:
                type: string
                format: string
              article_link:
                type: string
                format: string
              article_img:
                type: string
                format: string
              article_title:
                type: string
                format: string
              emotional_response:
                type: string
                format: 'positive, neutral, negative, none'
              positive_responses:
                type: number
                format: number
              neutral_responses:
                type: number
                format: number
              negative_responses:
                type: number
                format: number
        '400':
          description: Bad Request
        '401':
          description: Token invalid
        '404':
          description: Issue Not Found
    post:
      description: Create new user issue
      parameters:
        - $ref: '#/parameters/TokenParam'
        - $ref: '#/parameters/NewUserIssueParam'
        - $ref: '#/parameters/IssueIDParam'
      tags:
        - Users
      responses:
        '201':
          description: Successful response
          schema:
            type: object
            properties:
              issue_id:
                type: string
                format: string
              short_issue_id:
                type: string
                format: string
              bill_id:
                type: string
                format: string
              bill_title:
                type: string
                format: string
              comment:
                type: string
                format: string
              user_id:
                type: string
                format: string
              first_name:
                type: string
                format: string
              last_name:
                type: string
                format: string
              img_url:
                type: string
                format: string
              article_link:
                type: string
                format: string
              article_img:
                type: string
                format: string
              article_title:
                type: string
                format: string
              emotional_response:
                type: string
                format: 'positive, neutral, negative, none'
              positive_responses:
                type: number
                format: number
              neutral_responses:
                type: number
                format: number
              negative_responses:
                type: number
                format: number
        '400':
          description: Bad Request
        '401':
          description: Token invalid
  /user/contact:
    post:
      description: Submit Contact Form Email
      parameters:
        - $ref: '#/parameters/ContactFormParam'
      tags:
        - Users
      responses:
        '201':
          description: Successful response
        '400':
          description: Bad Request
  /search:
    get:
      description: Search For Bills and Public Users using a term.
      parameters:
        - $ref: '#/parameters/TermParam'
      tags:
        - Search
      responses:
        '200':
          description: Successful response
  /search/bills:
    get:
      description: Search for all Bills with given tag or multiple tags separated by comma.
      parameters:
        - $ref: '#/parameters/TagParam'
      tags:
        - Search
      responses:
        '200':
          description: Successful response
  '/vote/bill/{bill_id}':
    get:
      description: Get vote records for a bill
      parameters:
        - $ref: '#/parameters/BillIDPathParam'
        - $ref: '#/parameters/OptionalTokenParam'
      tags:
        - Votes
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/VoteRecords'
        '400':
          description: Bad Request
        '401':
          description: Not Authorized (Check Authentication Token)
  /vote/count:
    get:
      description: Get vote count for a bill.
      parameters:
        - $ref: '#/parameters/BillIDQueryParam'
        - $ref: '#/parameters/OptionalTokenParam'
      tags:
        - Votes
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/VoteCount'
        '401':
          description: Not Authorized (Check Authentication Token)
  /vote:
    put:
      description: Create user vote record
      parameters:
        - $ref: '#/parameters/VoteRecordParam'
        - $ref: '#/parameters/TokenParam'
      tags:
        - Votes
      responses:
        '201':
          description: Successful response
        '400':
          description: 'Invalid vote record, check payload'
        '401':
          description: Not Authorized (Check Authentication Token)
        '409':
          description: Vote Record already associated with this user and bill
  '/legislators/{id}':
    get:
      description: Get Legislator by thomas id
      parameters:
        - $ref: '#/parameters/LegislatorIDParam'
        - $ref: '#/parameters/OptionalTokenParam'
      tags:
        - Legislators
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/LegislatorRecord'
        '401':
          description: Not Authorized (Check Authentication Token)
  /bills/trending:
    get:
      description: Retrieve a list of trending bills
      parameters:
        - $ref: '#/parameters/OptionalTokenParam'
      tags:
        - Bills
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/TrendingBillRecords'
        '401':
          description: Not Authorized (Check Authentication Token)
  '/bills/{bill_id}':
    get:
      description: >
        Get a `Bill` object by bill id e.g. hr2-114.  A bill ID is made up of
        a type, number and congress session
      parameters:
        - $ref: '#/parameters/BillIDParam'
        - $ref: '#/parameters/OptionalTokenParam'
      tags:
        - Bills
      responses:
        '200':
          description: Successful response
          schema:
            title: Bill
            type: object
        '401':
          description: Not Authorized (Check Authentication Token)
  '/bills/{bill_id}/comments':
    get:
      description: "Get all comments for a 'Bill.  This is a nested datastructure"
      parameters:
        - $ref: '#/parameters/BillIDParam'
        - $ref: '#/parameters/OptionalTokenParam'
        - name: sort-by
          in: query
          description: "Parameter used sorting.  Specify 'latest' or 'highest-score'.  If you omit this parameter it will sort comments by highest score"
          required: false
          type: string
          format: string
          enum:
            - latest
            - highest-score
        - name: last_comment_id
          in: query
          description: Include the last comment_id specified in the response payload for pagination support
          required: false
          type: string
          format: string
      tags:
        - Bills
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/BillCommentRecords'
        '401':
          description: Not Authorized (Check Authentication Token)
  '/bills/{bill_id}/topcomments':
    get:
      description: Get the top comment for and against a bill.  Comments will only be returned if comments exist for users who voted for and against the bill.
      parameters:
        - $ref: '#/parameters/BillIDParam'
        - $ref: '#/parameters/OptionalTokenParam'
      tags:
        - Bills
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              total:
                type: number
                format: number
              for-comment:
                $ref: '#/definitions/BillCommentRecord'
              against-comment:
                $ref: '#/definitions/BillCommentRecord'
        '401':
          description: Not Authorized (Check Authentication Token)
  /bills/comments:
    put:
      description: Create a new comment for a given bill
      parameters:
        - $ref: '#/parameters/NewCommentParam'
        - $ref: '#/parameters/TokenParam'
      tags:
        - Bills
      responses:
        '201':
          description: Successful Response
          schema:
            $ref: '#/definitions/BillCommentRecord'
        '400':
          description: Bad Request (check body of request)
        '401':
          description: Not Authorized (Check Authentication Token)
  '/comments/{comment_id}':
    post:
      description: Update a comment
      parameters:
        - $ref: '#/parameters/TokenParam'
        - $ref: '#/parameters/CommentIDParam'
        - $ref: '#/parameters/UpdateCommentParam'
      tags:
        - Bills
      responses:
        '201':
          description: Successful Response
          schema:
            $ref: '#/definitions/BillCommentRecord'
        '401':
          description: Not Authorized (Check Authentication Token)
  '/comments/{comment_id}/like':
    post:
      description: Like a comment
      parameters:
        - $ref: '#/parameters/ScoreBodyParam'
        - $ref: '#/parameters/TokenParam'
        - $ref: '#/parameters/CommentIDParam'
      tags:
        - Bills
      responses:
        '201':
          description: Successful response
        '401':
          description: Not Authorized (Check Authentication Token)
    delete:
      description: Revoke a Liked comment
      parameters:
        - $ref: '#/parameters/ScoreBodyParam'
        - $ref: '#/parameters/TokenParam'
        - $ref: '#/parameters/CommentIDParam'
      tags:
        - Bills
      responses:
        '204':
          description: Successful response
        '401':
          description: Not Authorized (Check Authentication Token)
  '/comments/{comment_id}/dislike':
    post:
      description: Dislike a comment
      parameters:
        - $ref: '#/parameters/ScoreBodyParam'
        - $ref: '#/parameters/TokenParam'
        - $ref: '#/parameters/CommentIDParam'
      tags:
        - Bills
      responses:
        '201':
          description: Successful response
        '401':
          description: Not Authorized (Check Authentication Token)
    delete:
      description: Revoke a disliked comment
      parameters:
        - $ref: '#/parameters/ScoreBodyParam'
        - $ref: '#/parameters/TokenParam'
        - $ref: '#/parameters/CommentIDParam'
      tags:
        - Bills
      responses:
        '204':
          description: Successful response
        '401':
          description: Not Authorized (Check Authentication Token)
  '/comments/{comment_id}/reply':
    put:
      description: Reply to an existing comment id
      parameters:
        - $ref: '#/parameters/CommentIDParam'
        - $ref: '#/parameters/NewCommentParam'
        - $ref: '#/parameters/TokenParam'
      tags:
        - Bills
      responses:
        '201':
          description: Successful response
          schema:
            $ref: '#/definitions/BillCommentRecord'
        '400':
          description: Bad request (Check body of request)
        '401':
          description: Not Authorized (Check Authentication Token)
